digraph "classes" {
rankdir=BT
charset="utf-8"
"tkinter.BaseWidget" [color="black", fontcolor="black", label="{BaseWidget|children : dict\lmaster : NoneType\ltk : NoneType\lwidgetName\l|destroy()\l}", shape="record", style="solid"];
"wanderer.Character.Boss" [color="black", fontcolor="black", label="{Boss|TYPE : str\l|get_character_type()\linit_skills()\l}", shape="record", style="solid"];
"tkinter.Canvas" [color="black", fontcolor="black", label="{Canvas|itemconfig\llift\llower\ltkraise\l|addtag()\laddtag_above(newtag, tagOrId)\laddtag_all(newtag)\laddtag_below(newtag, tagOrId)\laddtag_closest(newtag, x, y, halo, start)\laddtag_enclosed(newtag, x1, y1, x2, y2)\laddtag_overlapping(newtag, x1, y1, x2, y2)\laddtag_withtag(newtag, tagOrId)\lbbox()\lcanvasx(screenx, gridspacing)\lcanvasy(screeny, gridspacing)\lcoords()\lcreate_arc()\lcreate_bitmap()\lcreate_image()\lcreate_line()\lcreate_oval()\lcreate_polygon()\lcreate_rectangle()\lcreate_text()\lcreate_window()\ldchars()\ldelete()\ldtag()\lfind()\lfind_above(tagOrId)\lfind_all()\lfind_below(tagOrId)\lfind_closest(x, y, halo, start)\lfind_enclosed(x1, y1, x2, y2)\lfind_overlapping(x1, y1, x2, y2)\lfind_withtag(tagOrId)\lfocus()\lgettags()\licursor()\lindex()\linsert()\litemcget(tagOrId, option)\litemconfigure(tagOrId, cnf)\lmove()\lmoveto(tagOrId, x, y)\lpostscript(cnf)\lscale()\lscan_dragto(x, y, gain)\lscan_mark(x, y)\lselect_adjust(tagOrId, index)\lselect_clear()\lselect_from(tagOrId, index)\lselect_item()\lselect_to(tagOrId, index)\ltag_bind(tagOrId, sequence, func, add)\ltag_lower()\ltag_raise()\ltag_unbind(tagOrId, sequence, funcid)\ltype(tagOrId)\l}", shape="record", style="solid"];
"wanderer.Character.Character" [color="black", fontcolor="black", label="{Character|TYPE : str\lhp\llevel : int\lx : int\ly : int\l|d6()\lgenerate_dp()\lgenerate_hp()\lgenerate_sp()\lget_character_type()\lget_dp()\lget_image()\lget_name()\lget_position()\lget_stats()\lget_sv()\linit_images(img)\linit_position(x, y)\linit_skills()\l}", shape="record", style="solid"];
"wanderer.GameControl.GameControl" [color="black", fontcolor="black", label="{GameControl|LEVEL_STATUS_FAILED : str\lLEVEL_STATUS_IN_PROGRESS : str\lLEVEL_STATUS_WON : str\lhero\lmap\l|battle(attacker, defender)\lcontrol_enemy(character)\leval_level_status(character)\lget_characters()\lget_distance_of_hero(enemy)\lget_enemy(character)\lget_enemy_at_position(x, y)\lget_enemy_types()\lget_level_status()\lget_random_floor_map()\lget_stats(character)\lmove(character, x, y)\lmove_enemies()\lmove_enemy(enemy)\lprepare_battle(character)\lremove_killed(character)\lset_level_failed()\lset_level_in_progress()\lset_level_won()\lstrike(attacker, defender)\l}", shape="record", style="solid"];
"wanderer.Screen.GameScreen" [color="black", fontcolor="black", label="{GameScreen|\l|cls()\ldraw_characters()\ldraw_map()\ldraw_screen(): None\ldraw_stats()\lget_enemy_stat_txt()\lget_enemy_txt_pos_x()\lget_hero_stat_txt()\lget_hero_txt_pos_x()\lget_txt_pos_y()\lload_images(): None\l}", shape="record", style="solid"];
"tkinter.Grid" [color="black", fontcolor="black", label="{Grid|bbox\lcolumnconfigure\lconfig\lconfigure\lforget\lgrid\lgrid_bbox\lgrid_columnconfigure\lgrid_location\lgrid_propagate\lgrid_rowconfigure\lgrid_size\lgrid_slaves\linfo\llocation\lpropagate\lrowconfigure\lsize\lslaves\l|grid_configure(cnf)\lgrid_forget()\lgrid_info()\lgrid_remove()\l}", shape="record", style="solid"];
"wanderer.Character.Hero" [color="black", fontcolor="black", label="{Hero|PERCENT_CHANCE_OF_HP_10PERCENT_RECHARGE : int\lPERCENT_CHANCE_OF_HP_3RD_RECHARGE : int\lPERCENT_CHANCE_OF_HP_FULL_RECHARGE : int\lTYPE : str\lnum_of_moves : int\lx\ly\l|generate_dp()\lgenerate_hp()\lgenerate_sp()\lget_character_type()\linit_images(img)\linit_skills()\l}", shape="record", style="solid"];
"tkinter.Image" [color="black", fontcolor="black", label="{Image|config\lname : NoneType\ltk : NoneType\l|configure()\lheight()\ltype()\lwidth()\l}", shape="record", style="solid"];
"wanderer.Images.ImgBoss" [color="black", fontcolor="black", label="{ImgBoss|\l|}", shape="record", style="solid"];
"wanderer.Images.ImgConfig" [color="black", fontcolor="black", label="{ImgConfig|IMG_SIZE : int\l|}", shape="record", style="solid"];
"wanderer.Images.ImgFloor" [color="black", fontcolor="black", label="{ImgFloor|\l|}", shape="record", style="solid"];
"wanderer.Images.ImgHeroDown" [color="black", fontcolor="black", label="{ImgHeroDown|\l|}", shape="record", style="solid"];
"wanderer.Images.ImgHeroLeft" [color="black", fontcolor="black", label="{ImgHeroLeft|\l|}", shape="record", style="solid"];
"wanderer.Images.ImgHeroRight" [color="black", fontcolor="black", label="{ImgHeroRight|\l|}", shape="record", style="solid"];
"wanderer.Images.ImgHeroUp" [color="black", fontcolor="black", label="{ImgHeroUp|\l|}", shape="record", style="solid"];
"wanderer.Images.ImgSkeleton" [color="black", fontcolor="black", label="{ImgSkeleton|\l|}", shape="record", style="solid"];
"wanderer.Images.ImgWall" [color="black", fontcolor="black", label="{ImgWall|\l|}", shape="record", style="solid"];
"wanderer.Map.Map" [color="black", fontcolor="black", label="{Map|map_config\l|generate_graph()\lgenerate_map()\lget_graph()\lget_map()\lget_shortest_path(start, goal)\l}", shape="record", style="solid"];
"wanderer.Map.MapBlock" [color="black", fontcolor="black", label="{MapBlock|img : NoneType\lwall : bool\lx : int\ly : int\l|}", shape="record", style="solid"];
"wanderer.Map.MapConfig" [color="black", fontcolor="black", label="{MapConfig|act_wall_list : list\lmap_config : dict\lmap_x : int\lmap_y : int\lstats_x : int\lwall_list_v1 : list\lwall_list_v2 : list\l|is_floor(x, y)\lis_in_map(x, y)\lis_wall(x, y)\lload_config()\l}", shape="record", style="solid"];
"tkinter.Misc" [color="black", fontcolor="black", label="{Misc|anchor\lbbox\lcolumnconfigure\lconfig\lfocus\llift\lpropagate\lregister\lrowconfigure\lsize\lslaves\lwaitvar\l|after(ms, func)\lafter_cancel(id)\lafter_idle(func)\lbell(displayof)\lbind(sequence, func, add)\lbind_all(sequence, func, add)\lbind_class(className, sequence, func, add)\lbindtags(tagList)\lcget(key)\lclipboard_append(string)\lclipboard_clear()\lclipboard_get()\lconfigure(cnf)\ldeletecommand(name)\ldestroy()\levent_add(virtual)\levent_delete(virtual)\levent_generate(sequence)\levent_info(virtual)\lfocus_displayof()\lfocus_force()\lfocus_get()\lfocus_lastfor()\lfocus_set()\lgetboolean(s)\lgetdouble(s)\lgetint(s)\lgetvar(name)\lgrab_current()\lgrab_release()\lgrab_set()\lgrab_set_global()\lgrab_status()\lgrid_anchor(anchor)\lgrid_bbox(column, row, col2, row2)\lgrid_columnconfigure(index, cnf)\lgrid_location(x, y)\lgrid_propagate(flag)\lgrid_rowconfigure(index, cnf)\lgrid_size()\lgrid_slaves(row, column)\limage_names()\limage_types()\lkeys()\llower(belowThis)\lmainloop(n)\lnametowidget(name)\loption_add(pattern, value, priority)\loption_clear()\loption_get(name, className)\loption_readfile(fileName, priority)\lpack_propagate(flag)\lpack_slaves()\lplace_slaves()\lquit()\lselection_clear()\lselection_get()\lselection_handle(command)\lselection_own()\lselection_own_get()\lsend(interp, cmd)\lsetvar(name, value)\ltk_bisque()\ltk_focusFollowsMouse()\ltk_focusNext()\ltk_focusPrev()\ltk_setPalette()\ltk_strictMotif(boolean)\ltkraise(aboveThis)\lunbind(sequence, funcid)\lunbind_all(sequence)\lunbind_class(className, sequence)\lupdate()\lupdate_idletasks()\lwait_variable(name)\lwait_visibility(window)\lwait_window(window)\lwinfo_atom(name, displayof)\lwinfo_atomname(id, displayof)\lwinfo_cells()\lwinfo_children()\lwinfo_class()\lwinfo_colormapfull()\lwinfo_containing(rootX, rootY, displayof)\lwinfo_depth()\lwinfo_exists()\lwinfo_fpixels(number)\lwinfo_geometry()\lwinfo_height()\lwinfo_id()\lwinfo_interps(displayof)\lwinfo_ismapped()\lwinfo_manager()\lwinfo_name()\lwinfo_parent()\lwinfo_pathname(id, displayof)\lwinfo_pixels(number)\lwinfo_pointerx()\lwinfo_pointerxy()\lwinfo_pointery()\lwinfo_reqheight()\lwinfo_reqwidth()\lwinfo_rgb(color)\lwinfo_rootx()\lwinfo_rooty()\lwinfo_screen()\lwinfo_screencells()\lwinfo_screendepth()\lwinfo_screenheight()\lwinfo_screenmmheight()\lwinfo_screenmmwidth()\lwinfo_screenvisual()\lwinfo_screenwidth()\lwinfo_server()\lwinfo_toplevel()\lwinfo_viewable()\lwinfo_visual()\lwinfo_visualid()\lwinfo_visualsavailable(includeids)\lwinfo_vrootheight()\lwinfo_vrootwidth()\lwinfo_vrootx()\lwinfo_vrooty()\lwinfo_width()\lwinfo_x()\lwinfo_y()\l}", shape="record", style="solid"];
"tkinter.Pack" [color="black", fontcolor="black", label="{Pack|config\lconfigure\lforget\linfo\lpack\lpack_propagate\lpack_slaves\lpropagate\lslaves\l|pack_configure(cnf)\lpack_forget()\lpack_info()\l}", shape="record", style="solid"];
"tkinter.PhotoImage" [color="black", fontcolor="black", label="{PhotoImage|\l|blank()\lcget(option)\lcopy()\lget(x, y)\lput(data, to)\lsubsample(x, y)\ltransparency_get(x, y)\ltransparency_set(x, y, boolean)\lwrite(filename, format, from_coords)\lzoom(x, y)\l}", shape="record", style="solid"];
"tkinter.Place" [color="black", fontcolor="black", label="{Place|config\lconfigure\lforget\linfo\lplace\lplace_slaves\lslaves\l|place_configure(cnf)\lplace_forget()\lplace_info()\l}", shape="record", style="solid"];
"wanderer.Sounds.PlaySoundError" [color="black", fontcolor="red", label="{PlaySoundError|ErrorMsg : str\l|}", shape="record", style="solid"];
"wanderer.Character.Skeleton" [color="black", fontcolor="black", label="{Skeleton|TYPE : str\l|generate_dp()\lgenerate_hp()\lgenerate_sp()\lget_character_type()\linit_skills()\lis_key_holder()\lset_key_holder(value)\l}", shape="record", style="solid"];
"wanderer.Sounds.Sound" [color="black", fontcolor="black", label="{Sound|SOUND_DEAD\lSOUND_GAME_OVER\lSOUND_HIT\lSOUND_START\lSOUND_STEP\lSOUND_WIN\l|play(sound2play)\l}", shape="record", style="solid"];
"tkinter.Tk" [color="black", fontcolor="black", label="{Tk|children : dict\lmaster : NoneType\ltest : Button\ltk : NoneType\l|destroy()\lloadtk()\lreadprofile(baseName, className)\lreport_callback_exception(exc, val, tb)\l}", shape="record", style="solid"];
"tkinter.Widget" [color="black", fontcolor="black", label="{Widget|\l|}", shape="record", style="solid"];
"wanderer.Window.Window" [color="black", fontcolor="black", label="{Window|closing : bool\lgame_control\lmap\lscreen\l|center()\ldestroy(): None\ldown_key(event)\ldraw_screen()\lleft_key(event)\lright_key(event)\lspace_key(event)\lup_key(event)\l}", shape="record", style="solid"];
"wanderer.Window.WindowConfig" [color="black", fontcolor="black", label="{WindowConfig|\l|}", shape="record", style="solid"];
"tkinter.Wm" [color="black", fontcolor="black", label="{Wm|aspect\lattributes\lclient\lcolormapwindows\lcommand\ldeiconify\lfocusmodel\lforget\lframe\lgeometry\lgrid\lgroup\liconbitmap\liconify\liconmask\liconname\liconphoto\liconposition\liconwindow\lmanage\lmaxsize\lminsize\loverrideredirect\lpositionfrom\lprotocol\lresizable\lsizefrom\lstate\ltitle\ltransient\lwithdraw\l|wm_aspect(minNumer, minDenom, maxNumer, maxDenom)\lwm_attributes()\lwm_client(name)\lwm_colormapwindows()\lwm_command(value)\lwm_deiconify()\lwm_focusmodel(model)\lwm_forget(window)\lwm_frame()\lwm_geometry(newGeometry)\lwm_grid(baseWidth, baseHeight, widthInc, heightInc)\lwm_group(pathName)\lwm_iconbitmap(bitmap, default)\lwm_iconify()\lwm_iconmask(bitmap)\lwm_iconname(newName)\lwm_iconphoto(default)\lwm_iconposition(x, y)\lwm_iconwindow(pathName)\lwm_manage(widget)\lwm_maxsize(width, height)\lwm_minsize(width, height)\lwm_overrideredirect(boolean)\lwm_positionfrom(who)\lwm_protocol(name, func)\lwm_resizable(width, height)\lwm_sizefrom(who)\lwm_state(newstate)\lwm_title(string)\lwm_transient(master)\lwm_withdraw()\l}", shape="record", style="solid"];
"tkinter.XView" [color="black", fontcolor="black", label="{XView|\l|xview()\lxview_moveto(fraction)\lxview_scroll(number, what)\l}", shape="record", style="solid"];
"tkinter.YView" [color="black", fontcolor="black", label="{YView|\l|yview()\lyview_moveto(fraction)\lyview_scroll(number, what)\l}", shape="record", style="solid"];
"tkinter.BaseWidget" -> "tkinter.Misc" [arrowhead="empty", arrowtail="none"];
"tkinter.Canvas" -> "tkinter.Widget" [arrowhead="empty", arrowtail="none"];
"tkinter.Canvas" -> "tkinter.XView" [arrowhead="empty", arrowtail="none"];
"tkinter.Canvas" -> "tkinter.YView" [arrowhead="empty", arrowtail="none"];
"tkinter.PhotoImage" -> "tkinter.Image" [arrowhead="empty", arrowtail="none"];
"tkinter.Tk" -> "tkinter.Misc" [arrowhead="empty", arrowtail="none"];
"tkinter.Tk" -> "tkinter.Wm" [arrowhead="empty", arrowtail="none"];
"tkinter.Widget" -> "tkinter.BaseWidget" [arrowhead="empty", arrowtail="none"];
"tkinter.Widget" -> "tkinter.Grid" [arrowhead="empty", arrowtail="none"];
"tkinter.Widget" -> "tkinter.Pack" [arrowhead="empty", arrowtail="none"];
"tkinter.Widget" -> "tkinter.Place" [arrowhead="empty", arrowtail="none"];
"wanderer.Character.Boss" -> "wanderer.Character.Character" [arrowhead="empty", arrowtail="none"];
"wanderer.Character.Hero" -> "wanderer.Character.Character" [arrowhead="empty", arrowtail="none"];
"wanderer.Character.Skeleton" -> "wanderer.Character.Character" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgBoss" -> "tkinter.PhotoImage" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgBoss" -> "wanderer.Images.ImgConfig" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgFloor" -> "tkinter.PhotoImage" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgFloor" -> "wanderer.Images.ImgConfig" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgHeroDown" -> "tkinter.PhotoImage" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgHeroDown" -> "wanderer.Images.ImgConfig" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgHeroLeft" -> "tkinter.PhotoImage" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgHeroLeft" -> "wanderer.Images.ImgConfig" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgHeroRight" -> "tkinter.PhotoImage" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgHeroRight" -> "wanderer.Images.ImgConfig" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgHeroUp" -> "tkinter.PhotoImage" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgHeroUp" -> "wanderer.Images.ImgConfig" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgSkeleton" -> "tkinter.PhotoImage" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgSkeleton" -> "wanderer.Images.ImgConfig" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgWall" -> "tkinter.PhotoImage" [arrowhead="empty", arrowtail="none"];
"wanderer.Images.ImgWall" -> "wanderer.Images.ImgConfig" [arrowhead="empty", arrowtail="none"];
"wanderer.Screen.GameScreen" -> "tkinter.Canvas" [arrowhead="empty", arrowtail="none"];
"wanderer.Window.Window" -> "tkinter.Tk" [arrowhead="empty", arrowtail="none"];
"wanderer.Window.Window" -> "wanderer.Window.WindowConfig" [arrowhead="empty", arrowtail="none"];
"tkinter.Tk" -> "tkinter.BaseWidget" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="master", style="solid"];
"wanderer.Map.MapConfig" -> "wanderer.Map.Map" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="map_config", style="solid"];
}
